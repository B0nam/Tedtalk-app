// Mocks generated by Mockito 5.4.4 from annotations
// in tedtalk/test/services/ted_talk_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tedtalk/models/ted_talk.dart' as _i2;
import 'package:tedtalk/services/ted_talk_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTedTalk_0 extends _i1.SmartFake implements _i2.TedTalk {
  _FakeTedTalk_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TedTalkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTedTalkService extends _i1.Mock implements _i3.TedTalkService {
  MockTedTalkService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.TedTalk>> fetchAllTedTalks() => (super.noSuchMethod(
        Invocation.method(
          #fetchAllTedTalks,
          [],
        ),
        returnValue: _i4.Future<List<_i2.TedTalk>>.value(<_i2.TedTalk>[]),
      ) as _i4.Future<List<_i2.TedTalk>>);

  @override
  _i4.Future<_i2.TedTalk> fetchTedTalkById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchTedTalkById,
          [id],
        ),
        returnValue: _i4.Future<_i2.TedTalk>.value(_FakeTedTalk_0(
          this,
          Invocation.method(
            #fetchTedTalkById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.TedTalk>);

  @override
  _i4.Future<_i2.TedTalk> createTedTalk(_i2.TedTalk? tedTalk) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTedTalk,
          [tedTalk],
        ),
        returnValue: _i4.Future<_i2.TedTalk>.value(_FakeTedTalk_0(
          this,
          Invocation.method(
            #createTedTalk,
            [tedTalk],
          ),
        )),
      ) as _i4.Future<_i2.TedTalk>);

  @override
  _i4.Future<void> updateTedTalk(_i2.TedTalk? tedTalk) => (super.noSuchMethod(
        Invocation.method(
          #updateTedTalk,
          [tedTalk],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteTedTalk(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTedTalk,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
